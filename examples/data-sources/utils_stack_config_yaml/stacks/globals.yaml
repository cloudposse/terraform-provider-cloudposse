vars:
  namespace: eg

terraform:
  vars: {}

  backend_type: s3 # s3, remote, vault, etc.
  backend:
    s3:
      encrypt: true
      bucket: "eg-uw2-root-tfstate"
      key: "terraform.tfstate"
      dynamodb_table: "eg-uw2-root-tfstate-lock"
      role_arn: "arn:aws:iam::XXXXXXXXXXXX:role/eg-gbl-root-terraform"
      acl: "bucket-owner-full-control"
      region: "us-west-2"
    remote: {}
    vault: {}

helmfile:
  vars: {}

components:
  terraform:
    tfstate-backend:
      backend:
        s3:
          workspace_key_prefix: "tfstate-backend"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    account:
      backend:
        s3:
          workspace_key_prefix: "account"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    account-map:
      backend:
        s3:
          workspace_key_prefix: "account-map"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    account-settings:
      backend:
        s3:
          workspace_key_prefix: "account-settings"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    dns-delegated:
      backend:
        s3:
          workspace_key_prefix: "dns-delegated"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    dns-primary:
      backend:
        s3:
          workspace_key_prefix: "dns-primary"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    eks:
      backend:
        s3:
          workspace_key_prefix: "eks"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    eks-iam:
      backend:
        s3:
          workspace_key_prefix: "eks-iam"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    iam-delegated-roles:
      backend:
        s3:
          workspace_key_prefix: "iam-delegated-roles"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    iam-primary-roles:
      backend:
        s3:
          workspace_key_prefix: "iam-primary-roles"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    spotinst-integration:
      backend:
        s3:
          workspace_key_prefix: "spotinst-integration"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    sso:
      backend:
        s3:
          workspace_key_prefix: "sso"
          role_arn: null
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    config-bucket:
      backend:
        s3:
          workspace_key_prefix: "config-bucket"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    cloudtrail-bucket:
      backend:
        s3:
          workspace_key_prefix: "cloudtrail-bucket"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    cloudtrail:
      vars:
        cloudtrail_bucket_environment_name: "uw2"
        cloudtrail_bucket_stage_name: "audit"
      backend:
        s3:
          workspace_key_prefix: "cloudtrail"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    transit-gateway:
      backend:
        s3:
          workspace_key_prefix: "transit-gateway"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    vpc-flow-logs-bucket:
      backend:
        s3:
          workspace_key_prefix: "vpc-flow-logs-bucket"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    vpc:
      vars:
        subnet_type_tag_key: "eg.com/subnet/type"
        vpc_flow_logs_enabled: true
        vpc_flow_logs_bucket_environment_name: "uw2"
        vpc_flow_logs_bucket_stage_name: "audit"
        vpc_flow_logs_traffic_type: "ALL"
      backend:
        s3:
          workspace_key_prefix: "vpc"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    ecr:
      backend:
        s3:
          workspace_key_prefix: "ecr"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    datadog-integration:
      backend:
        s3:
          workspace_key_prefix: "datadog-integration"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    datadog-monitor:
      backend:
        s3:
          workspace_key_prefix: "datadog-monitor"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    aurora-postgres:
      backend:
        s3:
          workspace_key_prefix: "aurora-postgres"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    efs:
      backend:
        s3:
          workspace_key_prefix: "efs"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    mq-broker:
      backend:
        s3:
          workspace_key_prefix: "mq-broker"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false

    ses:
      backend:
        s3:
          workspace_key_prefix: "ses"
      settings:
        spacelift:
          workspace_enabled: false
          autodeploy: false
        terraform_cloud:
          workspace_enabled: false
          autodeploy: false
